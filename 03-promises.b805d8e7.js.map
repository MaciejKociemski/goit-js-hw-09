{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAKf,SAAgBC,GACrBA,EAAEC,iBAEF,IAA4BC,EAAAF,EAAEG,cAAzBC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OACjBF,EAAOG,OAAOH,EAAMI,OACpBH,EAAME,OAAOF,EAAKG,OAClBF,EAAQC,OAAOD,EAAOE,OAEzB,IAAK,IAAIC,EAAU,EAAGA,GAAYH,EAAQG,GAAU,EACnDC,EAAcD,EAAUL,GACxBO,KAAKC,GACLC,MAAMC,GACPV,GAASC,C,IAIN,IAAGO,EAAoB,SAAAG,G,IAAGN,EAAQM,EAARN,SAAUL,EAAKW,EAALX,MACnCT,EAAAqB,OAAOC,QAAQ,uBAAwCC,OAAfT,EAAS,QAAYS,OAANd,EAAM,M,EAE3DU,EAAmB,SAAAC,G,IAAGN,EAAQM,EAARN,SAAUL,EAAKW,EAALX,MAClCT,EAAAqB,OAAOG,MAAM,sBAAqCD,OAAfT,EAAS,QAAYS,OAANd,EAAM,M,EAG5D,SAASM,EAAcD,EAAUL,GAC/B,IAAMgB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EACFI,EAAQ,CAAEf,WAAUL,UAGpBqB,EAAO,CAAEhB,WAAUL,S,GAGpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onFormSubmit);\n\n\n//onFormSubmit - przypisuję funkcję do zdarzenia wysłania formularza, pętlą tworzę obietnice z zadanymi krokami (delay, step, amount z zdania) z funkcją createPromise\n\nfunction onFormSubmit (e){\n  e.preventDefault();\n\n  let {delay, step, amount} = e.currentTarget;\n   delay= Number(delay.value);\n   step= Number(step.value);\n   amount= Number(amount.value);\n  \nfor (let position =1; position <= amount; position+=1){\n createPromise(position, delay)\n.then(onMakeOrderSuccess)\n.catch(onMakeOrderError)\ndelay += step;}\n}\n// gdy obietnica będzie poprawnie wywołuje funkcję onMakeOrderSucces, gdy bedzie odrzucona onMakeOrderError\n\nconst onMakeOrderSuccess =({ position, delay }) =>{\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  }\nconst onMakeOrderError = ({ position, delay }) =>{\n    Notify.error(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n  \nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => { \n    if (shouldResolve) {\n      resolve({ position, delay }\n      );\n    } else {\n      reject({ position, delay }\n      );\n    }\n  }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay","step","amount","Number","value","position","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onMakeOrderSuccess","catch","$ce04d3a99e08e73b$var$onMakeOrderError","param","Notify","success","concat","error","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.b805d8e7.js.map"}